.page-media-files-info
  .file-name 文件名称：#{@media_file.entry_file_name}
  .file-size 文件大小：#{@media_file.entry_file_size}
  - if @media_file.category
    .file-size 文件分类：#{@media_file.category.name}  
-if @media_file.is_video?
  .video-encode-status 转换状态：#{@media_file.video_encode_status}
  -if @media_file.encode_success?
    =raw video_tag @media_file
-elsif @media_file.is_audio? && @media_file.file_merged
  =javascript_include_tag "/audiojs/audio.min.js"
  %audio{:src=>@media_file.entry.url,:preload=>"auto"}
  :javascript
    audiojs.events.ready(function() {
      audiojs.createAll();
    });


.page-media-file-comment-form
  =form_for Comment.new do |f|
    =f.label '内容'
    =f.text_area :content
    =f.hidden_field :creator_id, :value => current_user.id
    =f.hidden_field :model_id, :value => @media_file.id
    =f.hidden_field :model_type, :value => @media_file.class.to_s
    =f.hidden_field :reply_comment_id, :value => ''
    =f.hidden_field :reply_comment_user_id, :value => ''
    =f.submit '评论'


.page-media-file-comments
  - @media_file.comments.each do |comment|
    .media-file-comment{:data => {:creator_id => "#{comment.creator_id}", :comment_id => "#{comment.id}"}, :id => "comment-#{comment.id}"}
      .comment-creator=comment.creator.name + ':'
      - if comment.reply_comment_id
        %a.comment-reply-to{:href => "#comment-#{comment.reply_comment_id}"} 回复评论#{comment.reply_comment_id}道
      .comment-content=comment.content
      %a.comment-reply{:href => '#'} 回复


- content_for :javascript do
  :javascript
    jQuery('.comment-reply').click(function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      var creator_id = jQuery(this).parent().data('creator_id');
      var comment_id = jQuery(this).parent().data('comment_id');

      jQuery('#comment_reply_comment_id').attr('value', comment_id);
      jQuery('#comment_reply_comment_user_id').attr('value', creator_id);

      jQuery('#comment_content').focus();
    });